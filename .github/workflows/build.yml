name: build

on:
  push:
    branches: ['master']

jobs:
  update-version:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version_out.outputs.package_version }}

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install cargo-bump and update version
        run: |
          cargo install cargo-bump
          cargo bump
          cargo build --release

      - name: Push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: 'Cargo.*'
          commit_message: "[skip ci] | version update"

      - id: version_out
        run: echo "package_version=$(cargo pkgid | cut -d '@' -f2)" >> "$GITHUB_OUTPUT"

  build-image:
    runs-on: ubuntu-latest
    needs: update-version

    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - env:
          PACKAGE_VERSION: ${{ needs.update-version.outputs.version }}
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/subscribehn
          tags: |
            type=semver,pattern={{version}},value=${{ env.PACKAGE_VERSION }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Login to Docker Hub 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  create-release:
    runs-on: ubuntu-latest
    needs: update-version

    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3

      - name: Build
        id: build
        uses: rust-build/rust-build.action@v1.4.3
        env:
          PACKAGE_VERSION: ${{ needs.update-version.outputs.version }}
        with:
          RUSTTARGET: x86_64-unknown-linux-musl
          ARCHIVE_NAME: subscribehn-${{ env.PACKAGE_VERSION }}-x86_64-unknown-linux-musl 
          ARCHIVE_TYPES: tar.gz
          UPLOAD_MODE: none

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Binary
          path: |
            ${{ steps.build.outputs.BUILT_ARCHIVE }}
            ${{ steps.build.outputs.BUILT_CHECKSUM }}

      - name: Release
        uses: "marvinpinto/action-automatic-releases@latest"
        env:
          PACKAGE_VERSION: ${{ needs.update-version.outputs.version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ env.PACKAGE_VERSION }}
          prerelease: true
          title: ${{ env.PACKAGE_VERSION }}
          files: |
            ${{ steps.build.outputs.BUILT_ARCHIVE }}
            ${{ steps.build.outputs.BUILT_CHECKSUM }}
